{"version":3,"file":"ilj_keywords.min.js","mappings":"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","sources":["webpack://wp-internal-linkjuicer/./src/admin/js/ilj_keywords.js"],"sourcesContent":["var __webpack_exports__ = {};\n/*!**************************************!*\\\n  !*** ./src/admin/js/ilj_keywords.js ***!\n  \\**************************************/\n(function ($) {\n  $.fn.ilj_keywords = function (options) {\n    var elem = this;\n\n    // Default options\n    var settings = $.extend({\n      inputField: '',\n      errorMessage: '',\n      requiresPro: false,\n      sortable: true\n    }, options);\n    var tipsoConfig = {\n      width: '',\n      maxWidth: '200',\n      useTitle: true,\n      delay: 100,\n      speed: 500,\n      background: '#32373c',\n      color: '#eeeeee',\n      size: 'small'\n    };\n    var keyword = {\n      keywords: [],\n      /**\n       * Init function for the object\n       */\n      init: function () {\n        var that = this;\n        if (settings.sortable) {\n          elem.find('ul.keyword-view').sortable({\n            opacity: 0.5,\n            helper: \"clone\",\n            forceHelperSize: true,\n            forcePlaceholderSize: true,\n            cursor: \"move\",\n            placeholder: \"placeholder\",\n            update: function (event, ui) {\n              that.reorderKeywords();\n            }\n          });\n        }\n        elem.find('ul.keyword-view').disableSelection();\n        elem.find('.tip').iljtipso(tipsoConfig);\n        elem.on('keypress', 'input.keywordInput', function (e) {\n          if (e.keyCode === 13) {\n            elem.find('a.add-keyword').click();\n          }\n          return e.keyCode != 13;\n        });\n\n        /**\n         * All interactions of the input GUI\n         */\n        elem.on('click', 'a.add-keyword', function (e) {\n          e.preventDefault();\n          var keyword_input = $(this).siblings('input.keywordInput');\n          if (keyword_input.val().indexOf(',') !== -1) {\n            var keywords = keyword_input.val().split(',');\n            keywords.forEach(function (keyword, index) {\n              keyword_value = that.sanitizeKeyword(keyword);\n              valid = that.validateKeyword(keyword_value);\n              if (!valid.is_valid) {\n                return;\n              }\n              that.addKeyword(keyword_value);\n            });\n          } else {\n            keyword_value = that.sanitizeKeyword(keyword_input.val());\n            valid = that.validateKeyword(keyword_value);\n            if (!valid.is_valid) {\n              that.setError(valid.message);\n              return;\n            }\n            that.addKeyword(keyword_value);\n          }\n          /**\n           * Initializing\n           */\n          keyword_input.val('');\n          that.clearError();\n          that.syncGui();\n          that.syncField();\n        });\n        this.initKeywords();\n        this.syncGui();\n\n        /**\n         * All interactions of the keyword view GUI\n         */\n        elem.on('click', '.keyword a.remove', function (e) {\n          e.preventDefault();\n          var index = $(this).parent('.keyword').data('id');\n          that.keywords.splice(index, 1);\n          that.syncGui();\n          that.syncField();\n        });\n        return this.keywords;\n      },\n      /**\n       * Initializing the keyword list\n       */\n      initKeywords: function () {\n        that = this;\n        var input_data = $('<textarea/>').text(settings.inputField.val()).html();\n        if (input_data != '' && input_data != null) {\n          var input_keywords = input_data.split(',');\n          input_keywords.forEach(function (keyword, index) {\n            that.addKeyword(keyword);\n          });\n        }\n      },\n      /**\n      * Add a Keyword to the keyword list\n      */\n      addKeyword: function (keyword) {\n        that = this;\n        this.keywords.push(keyword);\n      },\n      /**\n       * Cleans a given keyword\n       */\n      sanitizeKeyword: function (keyword) {\n        var keyword_sanitized = keyword.replace(/\\s*\\{\\s*/gu, \" {\").replace(/\\s*\\}\\s*/gu, \"} \").replace(/\\s{2,}/gu, \" \").replace(/^\\s+|\\s+$/gu, \"\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        return keyword_sanitized;\n      },\n      /**\n       * Checks if a keyword is valid\n       */\n      validateKeyword: function (keyword) {\n        var status = {\n          is_valid: false,\n          message: \"Unknown error\"\n        };\n        var min_length = 2;\n        var keyword_valid_check = keyword.replace(/\\{.*?\\}/gu, \"\").replace(/\\s/gu, \"\");\n        for (var i = 0; i < this.keywords.length; i++) {\n          if (keyword.toLowerCase() == this.keywords[i].toLowerCase()) {\n            status.message = ilj_editor_translation.message_keyword_exists;\n            return status;\n          }\n        }\n        if (keyword_valid_check === \"\") {\n          status.message = ilj_editor_translation.message_no_keyword;\n          return status;\n        }\n        if (keyword_valid_check.length < min_length) {\n          status.message = ilj_editor_translation.message_length_not_valid;\n          return status;\n        }\n        if (/(\\s?\\{[+-]*\\d+\\}\\s?){2,}/.test(keyword)) {\n          status.message = ilj_editor_translation.message_multiple_placeholder;\n          return status;\n        }\n        var keywords_count = this.keywords.length;\n        if (settings.requiresPro == true && ilj_editor_basic_restriction.is_active == true) {\n          if (keywords_count >= ilj_editor_basic_restriction.blacklist_limit) {\n            status.message = '<p>' + ilj_editor_translation.message_limited_blacklist_keyword + '</p>';\n            status.message += '<p>' + ilj_editor_translation.message_limited_blacklist_keyword_upgrade + '.</p>';\n            return status;\n          }\n        }\n        status.is_valid = true;\n        status.message = \"\";\n        return status;\n      },\n      /**\n       * Synchronizes the keyword view gui with the keyword list\n       */\n      syncGui: function () {\n        var that = this;\n        elem.find('ul.keyword-view li').remove();\n        if (this.keywords.length > 0) {\n          this.keywords.forEach(function (keyword, index) {\n            elem.find('ul.keyword-view').append($(that.renderKeyword(keyword, index)));\n          });\n          elem.find('.tip').iljtipso(tipsoConfig);\n        } else {\n          elem.find('ul.keyword-view').append($('<li>' + ilj_editor_translation.no_keywords + '</li>'));\n        }\n      },\n      /**\n       * Synchronizes the hidden input, that gets sent to the backend\n       */\n      syncField: function () {\n        settings.inputField.val(this.keywords.join(','));\n      },\n      /**\n       * Renders a single keyword to the keyword view GUI\n       */\n      renderKeyword: function (keyword, index) {\n        keyword_print = keyword.replace(/\\{(\\d+)\\}/g, '<span class=\"exact tip\" title=\"' + ilj_editor_translation.gap_hover_exact + ' $1\">$1</span>').replace(/\\{\\-(\\d+)\\}/g, '<span class=\"max tip\" title=\"' + ilj_editor_translation.gap_hover_max + ' $1\">$1</span>').replace(/\\{\\+(\\d+)\\}/g, '<span class=\"min tip\" title=\"' + ilj_editor_translation.gap_hover_min + ' $1\">$1</span>');\n        return '<li class=\"keyword\" data-id=\"' + index + '\"><a class=\"dashicons dashicons-dismiss remove\"></a>' + keyword_print + '</li>';\n      },\n      /**\n       * Re-orders the keywords-list depending on the order\n       * of the <li> -elements in the GUI\n       */\n      reorderKeywords: function () {\n        order = [];\n        var that = this;\n        elem.find('li').each(function () {\n          var id = $(this).data('id');\n          if (id === undefined) {\n            return;\n          }\n          order.push(id);\n        });\n        new_keywords = [];\n        $.each(order, function (key, position) {\n          new_keywords.push(that.keywords[position]);\n        });\n        that.keywords = new_keywords;\n        that.syncGui();\n        that.syncField();\n        return true;\n      },\n      /**\n       * Displays an error message\n       */\n      setError: function (message) {\n        settings.errorMessage.html(message);\n        settings.errorMessage.show();\n      },\n      /**\n       * Clears the error message\n       */\n      clearError: function () {\n        settings.errorMessage.html('');\n        settings.errorMessage.hide();\n      }\n    };\n\n    //Initializing the ILJ keyword object\n    keyword.init();\n  };\n})(jQuery);\n"],"names":["__webpack_exports__","$","fn","ilj_keywords","options","elem","this","settings","extend","inputField","errorMessage","requiresPro","sortable","tipsoConfig","width","maxWidth","useTitle","delay","speed","background","color","size","keywords","init","that","find","opacity","helper","forceHelperSize","forcePlaceholderSize","cursor","placeholder","update","event","ui","reorderKeywords","disableSelection","iljtipso","on","e","keyCode","click","preventDefault","keyword_input","siblings","val","indexOf","split","forEach","keyword","index","keyword_value","sanitizeKeyword","valid","validateKeyword","is_valid","addKeyword","setError","message","clearError","syncGui","syncField","initKeywords","parent","data","splice","input_data","text","html","push","replace","status","keyword_valid_check","i","length","toLowerCase","ilj_editor_translation","message_keyword_exists","message_no_keyword","message_length_not_valid","test","message_multiple_placeholder","keywords_count","ilj_editor_basic_restriction","is_active","blacklist_limit","message_limited_blacklist_keyword","message_limited_blacklist_keyword_upgrade","remove","append","renderKeyword","no_keywords","join","keyword_print","gap_hover_exact","gap_hover_max","gap_hover_min","order","each","id","undefined","new_keywords","key","position","show","hide","jQuery"],"sourceRoot":""}