(()=>{"use strict";const e=function(e){return"string"!=typeof e||""===e?(console.error("The namespace must be a non-empty string."),!1):!!/^[a-zA-Z][a-zA-Z0-9_.\-\/]*$/.test(e)||(console.error("The namespace can only contain numbers, letters, dashes, periods, underscores and slashes."),!1)},t=function(e){return"string"!=typeof e||""===e?(console.error("The hook name must be a non-empty string."),!1):/^__/.test(e)?(console.error("The hook name cannot begin with `__`."),!1):!!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(e)||(console.error("The hook name can only contain numbers, letters, dashes, periods and underscores."),!1)},i=function(i,n){return function(o,s,c,r=10){const a=i[n];if(!t(o))return;if(!e(s))return;if("function"!=typeof c)return void console.error("The hook callback must be a function.");if("number"!=typeof r)return void console.error("If specified, the hook priority must be a number.");const d={callback:c,priority:r,namespace:s};if(a[o]){const e=a[o].handlers;let t;for(t=e.length;t>0&&!(r>=e[t-1].priority);t--);t===e.length?e[t]=d:e.splice(t,0,d),a.__current.forEach((e=>{e.name===o&&e.currentIndex>=t&&e.currentIndex++}))}else a[o]={handlers:[d],runs:0};"hookAdded"!==o&&i.doAction("hookAdded",o,s,c,r)}},n=function(i,n,o=!1){return function(s,c){const r=i[n];if(!t(s))return;if(!o&&!e(c))return;if(!r[s])return 0;let a=0;if(o)a=r[s].handlers.length,r[s]={runs:r[s].runs,handlers:[]};else{const e=r[s].handlers;for(let t=e.length-1;t>=0;t--)e[t].namespace===c&&(e.splice(t,1),a++,r.__current.forEach((e=>{e.name===s&&e.currentIndex>=t&&e.currentIndex--})))}return"hookRemoved"!==s&&i.doAction("hookRemoved",s,c),a}},o=function(e,t){return function(i,n){const o=e[t];return void 0!==n?i in o&&o[i].handlers.some((e=>e.namespace===n)):i in o}},s=function(e,t,i=!1){return function(n,...o){const s=e[t];s[n]||(s[n]={handlers:[],runs:0}),s[n].runs++;const c=s[n].handlers;if(!c||!c.length)return i?o[0]:void 0;const r={name:n,currentIndex:0};for(s.__current.push(r);r.currentIndex<c.length;){const e=c[r.currentIndex].callback.apply(null,o);i&&(o[0]=e),r.currentIndex++}return s.__current.pop(),i?o[0]:void 0}},c=function(e,t){return function(){var i;const n=e[t];return null!==(i=n.__current[n.__current.length-1]?.name)&&void 0!==i?i:null}},r=function(e,t){return function(i){const n=e[t];return void 0===i?void 0!==n.__current[0]:!!n.__current[0]&&i===n.__current[0].name}},a=function(e,i){return function(n){const o=e[i];if(t(n))return o[n]&&o[n].runs?o[n].runs:0}};class d{constructor(){this.actions=Object.create(null),this.actions.__current=[],this.filters=Object.create(null),this.filters.__current=[],this.addAction=i(this,"actions"),this.addFilter=i(this,"filters"),this.removeAction=n(this,"actions"),this.removeFilter=n(this,"filters"),this.hasAction=o(this,"actions"),this.hasFilter=o(this,"filters"),this.removeAllActions=n(this,"actions",!0),this.removeAllFilters=n(this,"filters",!0),this.doAction=s(this,"actions"),this.applyFilters=s(this,"filters",!0),this.currentAction=c(this,"actions"),this.currentFilter=c(this,"filters"),this.doingAction=r(this,"actions"),this.doingFilter=r(this,"filters"),this.didAction=a(this,"actions"),this.didFilter=a(this,"filters")}}const l=new d,{addAction:u,addFilter:p,removeAction:m,removeFilter:f,hasAction:h,hasFilter:v,removeAllActions:g,removeAllFilters:b,doAction:S,applyFilters:y,currentAction:_,currentFilter:w,doingAction:F,doingFilter:z,didAction:P,didFilter:A,actions:T,filters:x}=l;function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function k(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function C(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?k(Object(i),!0).forEach((function(t){E(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):k(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function E(e,t,i){var n;return n=function(e,t){if("object"!=D(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(t),(t="symbol"==D(n)?n:String(n))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var B,L=VueColor.Sketch,I="sby-dummy-lightbox-component";SB_Customizer.initPromise.then((function(e){var t,i=C(C({},e.extraMethods),{},{updateColorValue:function(e){var t=this;t.customizerFeedData.settings[e]=1==t.customizerFeedData.settings[e].a?t.customizerFeedData.settings[e].hex:t.customizerFeedData.settings[e].hex8},sw_feed_params:function(){var e="";return this.sw_feed&&(e+="&sw-feed=true"),this.sw_feed_id&&(e+="&sw-feed-id="+this.sw_feed_id),e},swfeedReturnUrl:function(){var e=this,t="";return e.sw_feed&&(t="admin.php?page=sbsw#/create-feed"),e.sw_feed_id&&(t="admin.php?page=sbsw&feed_id="+e.sw_feed_id),t},customizerStyleMaker:function(){var e=this;return!!e.customizerSidebarBuilder&&(e.feedStyle="",Object.values(e.customizerSidebarBuilder).map((function(t){e.customizerSectionStyle(t.sections)})),'<style type="text/css">'+e.feedStyle+"</style>")},customizerSectionStyle:function(e){var t=this;Object.values(e).map((function(e){e.controls&&Object.values(e.controls).map((function(e){t.returnControlStyle(e)})),e.nested_sections&&(t.customizerSectionStyle(e.nested_sections),Object.values(e.nested_sections).map((function(e){Object.values(e.controls).map((function(e){e.section&&t.customizerSectionStyle(e)}))})))}))},returnControlStyle:function(e){var t=this;e.style&&Object.entries(e.style).map((function(i){(null==e.condition&&null==e.checkExtension||t.checkControlCondition(e.condition,e.checkExtension))&&(t.feedStyle+=i[0]+"{"+i[1].replaceAll("{{value}}",t.customizerFeedData.settings[e.id])+"}")}))},ajaxPost:function(e,t){e.nonce=this.nonce,this.$http.post(this.ajaxHandler,e).then(t)},activateView:function(e){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=this;i.viewsActive[e]=0==i.viewsActive[e],i.shouldShowFeedAPIForm=!1,i.shouldShowManualConnect=!1,i.shouldShowFeedAPIBackBtn=!1,"editName"==e&&document.getElementById("sbc-csz-hd-input").focus(),"feedtypesPopup"===e&&(i.viewsActive.feedTemplateElement=null,document.querySelector("body").classList.toggle("overflow-hidden")),"feedtemplatesPopup"===e&&(i.viewsActive.feedTemplateElement=null,document.querySelector("body").classList.toggle("overflow-hidden")),"embedPopup"==e&&1==t&&i.saveFeedSettings(),B.$forceUpdate()},switchCustomizerTab:function(e){var t=this,i=document.getElementsByTagName("body")[0];t.customizerScreens.activeTab=e,t.customizerScreens.activeSection=null,t.customizerScreens.activeSectionData=null,t.highLightedSection="all",t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"),B.$forceUpdate()},switchCustomizerSection:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0,o=this;o.customizerScreens.parentActiveSection=null,o.customizerScreens.parentActiveSectionData=null,i&&(o.customizerScreens.parentActiveSection=o.customizerScreens.activeSection,o.customizerScreens.parentActiveSectionData=o.customizerScreens.activeSectionData),o.customizerScreens.activeSection=e,o.customizerScreens.activeSectionData=t,n||o.enableHighLightSection(e)},saveFeedSettings:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this,i={action:"sby_feed_saver_manager_builder_update",update_feed:"true",feed_id:t.customizerFeedData.feed_info.id,feed_name:t.customizerFeedData.feed_info.feed_name,settings:t.customizerFeedData.settings};t.loadingBar=!0,t.ajaxPost(i,(function(i){var n=i.data;n&&!0===n.success?(t.processNotification("feedSaved"),t.customizerFeedDataInitial=t.customizerFeedData,!0===e&&setTimeout((function(){window.location.href=t.builderUrl}),1500)):t.processNotification("feedSavedError")})),B.$forceUpdate()},activateLicense:function(){var e=this;if(e.licenseBtnClicked=!0,null!=e.licenseKey){var t={action:"sby_license_activation",nonce:sbc_builder.nonce,license_key:e.licenseKey};e.ajaxPost(t,(function(t){e.licenseBtnClicked=!1;var i=t.data;i&&0==i.success?e.processNotification("licenseError"):!1!==i&&e.processNotification("licenseActivated")}))}else e.licenseBtnClicked=!1},clearSingleFeedCache:function(){var e=this,t={action:"sby_feed_saver_manager_clear_single_feed_cache",feedID:e.customizerFeedData.feed_info.id,feedName:e.customizerFeedData.feed_info.feed_name,previewSettings:e.customizerFeedData.settings};e.loadingBar=!0,e.ajaxPost(t,(function(t){var i=t.data;!1!==i?(e.updatedTimeStamp=(new Date).getTime(),e.template=String("<div>"+i.feed_html+"</div>"),e.processNotification("cacheCleared")):e.processNotification("unkownError")})),B.$forceUpdate()},changeCheckboxSectionValue:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=this;if(!1!==n)o.customizerFeedData.settings[e]=o.customizerFeedData.settings[e]==n.options.enabled?n.options.disabled:n.options.enabled;else{var s=o.customizerFeedData.settings[e];Array.isArray(s)||"type"!=e||(s=[s]),s.includes(t)?s.splice(s.indexOf(t),1):s.push(t),"type"==e&&o.processFeedTypesSources(s),o.customizerFeedData.settings[e]=s}!1!==i&&o.customizerControlAjaxAction(i),event.stopPropagation()},checkboxSectionValueExists:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"includes",t=arguments.length>1?arguments[1]:void 0;return!!this.customizerFeedData.settings[e].includes(t)},processNotification:function(e){var t=this,i=t.genericText.notification[e];t.loadingBar=!1,t.notificationElement={type:i.type,text:i.text,shown:"shown"},setTimeout((function(){t.notificationElement.shown="hidden"}),5e3)},updateInputWidth:function(){this.customizerScreens.inputNameWidth=8*(document.getElementById("sbc-csz-hd-input").value.length+6)+"px"},enableHighLightSection:function(e){var t=this,i=document.getElementsByTagName("body")[0];t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"),["customize_feedlayout","customize_colorscheme","customize_videos","post_style","individual_elements"].includes(e)?(t.highLightedSection="postList",t.scrollToHighLightedSection("sbi_images")):["customize_header"].includes(e)?(t.highLightedSection="header",t.scrollToHighLightedSection("sb_instagram_header")):["customize_followbutton"].includes(e)?(t.highLightedSection="followButton",t.scrollToHighLightedSection("sbi_load")):["customize_loadmorebutton"].includes(e)?(t.highLightedSection="loadMore",t.scrollToHighLightedSection("sbi_load")):["customize_lightbox"].includes(e)?(t.highLightedSection="lightBox",t.dummyLightBoxScreen=!0,document.body.scrollTop=0,document.documentElement.scrollTop=0,i.classList.add("no-overflow")):(t.highLightedSection="all",t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"))},scrollToHighLightedSection:function(e){var t=void 0!==document.getElementById(e)&&null!==document.getElementById(e)?document.getElementById(e):void 0!==document.getElementsByClassName(e)[0]&&null!==document.getElementsByClassName(e)[0]?document.getElementsByClassName(e)[0]:null;if(null!=t&&null!=t){var i=t.getBoundingClientRect().top-120+window.pageYOffset-10;window.scrollTo({top:i,behavior:"smooth"})}},ctaToggleFeatures:function(){this.freeCtaShowFeatures=!this.freeCtaShowFeatures,B.$forceUpdate()},isControlShown:function(e){var t=this;return null!=e.checkViewDisabled?!t.viewsActive[e.checkViewDisabled]:null!=e.checkView?!t.viewsActive[e.checkView]:null==e.checkExtension||0==e.checkExtension||t.checkExtensionActive(e.checkExtension)?null!=e.conditionDimmed&&t.checkControlCondition(e.conditionDimmed)?t.checkControlCondition(e.conditionDimmed):null!=e.overrideColorCondition?t.checkControlOverrideColor(e.overrideColorCondition):(null==e.conditionHide||null==e.condition)&&null==e.checkExtension||t.checkControlCondition(e.condition,e.checkExtension):t.checkExtensionActive(e.checkExtension)},checkControlOverrideColor:function(){var e=this,t=0;return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map((function(i,n){e.checkNotEmpty(e.customizerFeedData.settings[i])&&"#"!=e.customizerFeedData.settings[i].replace(/ /gi,"")&&(t+=1)})),t>=1},switchNestedSection:function(e,t){var i=this;if(null!==t)i.customizerScreens.activeSection=e,i.customizerScreens.activeSectionData=t;else{var n=e.sections,o=i.customizerSidebarBuilder;n.map((function(e,t){o=null!=o[e]&&null!=o[e]?o[e]:null})),null!=o&&(i.customizerScreens.activeSection=e.id,i.customizerScreens.activeSectionData=o)}B.$forceUpdate()},checkControlCondition:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=this,o=0;Object.keys(e).forEach((function(t,i){-1!==e[t].indexOf(n.customizerFeedData.settings[t])&&(o+=1)}));var s=null==t||0==t||n.checkExtensionActive(t);return s=!(null!=i&&0!=i&&!n.checkExtensionActive(i))&&s,o==Object.keys(e).length&&s},changeSwitcherSettingValue:function(e,t,i){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=this;o.customizerFeedData.settings[e]=o.customizerFeedData.settings[e]==t?i:t,!1!==n&&o.customizerControlAjaxAction(n),o.regenerateLayout(e)},selectedFeedTypeCustomizer:function(e){var t=!1;return this.customizerFeedData.settings.type===e&&(t=!0),t},selectedFeedTemplateCustomizer:function(e){var t,i=!1;return i=!1,(null===(t=this).viewsActive.feedTemplateElement&&t.customizerFeedData.settings.feedtemplate===e||null!==t.viewsActive.feedTemplateElement&&t.viewsActive.feedTemplateElement==e)&&(i=!0),i},chooseCustomizerFeedType:function(e){var t=this;t.selectedFeed=e.type;var i=t.hasFeature(t.selectedFeed+"_feeds");if("channel"!=t.selectedFeed&&!t.apiKeyStatus&&"social_wall"!==t.selectedFeed)return t.viewsActive.feedtypesPopup=!1,t.activateView("accountAPIPopup"),void(t.shouldShowFeedAPIForm=!0);if("social_wall"===t.selectedFeed){if(t.socialWallActivated)return void(window.location.href=t.socialWallAdminPage);t.activateView("feedtypesPopup"),t.viewsActive.extensionsPopupElement="social_wall"}else i?t.customizerFeedData.settings.type=e.type:t.viewsActive.extensionsPopupElement=t.selectedFeed;B.$forceUpdate()},chooseFeedTemplate:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this;i.selectedFeedTemplate=e.type,t&&(!i.sbyIsPro||i.sbyLicenseNoticeActive||i.sbyLicenseInactiveState||!i.hasFeature("feeds_templates")?(i.activateView("feedtemplatesPopup"),i.viewsActive.extensionsPopupElement="feedTemplate"):i.viewsActive.feedTemplateElement=e.type),B.$forceUpdate()},customizerFeedTypePrint:function(){var e=this;null==e.customizerFeedData.settings.type&&(e.customizerFeedData.settings.type="default");var t=e.feedTypes.filter((function(t){return t.type===e.customizerFeedData.settings.type}));return e.customizerScreens.printedTemplate=t.length>0?t[0]:[],t.length>0},customizerFeedTemplatePrint:function(){var e=this;null==e.customizerFeedData.settings.feedtemplate&&(e.customizerFeedData.settings.feedtemplate="default");var t=e.feedTemplates.filter((function(t){return t.type===e.customizerFeedData.settings.feedtemplate}));return e.customizerScreens.printedTemplate=t.length>0?t[0]:[],t.length>0},updateFeedTemplateCustomizer:function(){var e=this;e.customizerFeedData.settings.feedtemplate=null!=e.viewsActive.feedTemplateElement?e.viewsActive.feedTemplateElement:e.customizerFeedData.settings.feedtemplate,e.viewsActive.feedTemplateElement=null,e.viewsActive.feedtemplatesPopup=!1,e.customizerControlAjaxAction("feedTemplateFlyPreview"),B.$forceUpdate()},updateFeedTypeCustomizer:function(){this.viewsActive.feedtypesPopup=!1,this.customizerControlAjaxAction("feedTypeFlyPreview"),B.$forceUpdate()},valueIsEnabled:function(e){return 1==e||1==e||"true"==e||"on"==e},checkNotEmpty:function(e){return null!=e&&""!=e.replace(/ /gi,"")},hideColorPickerPospup:function(){this.customizerScreens.activeColorPicker=null},switchScreen:function(e,t){this.viewsActive[e]=t,B.$forceUpdate()},jsonParse:function(e){try{return JSON.parse(e)}catch(e){return!1}},creationProcessCheckAction:function(){var e=this,t=!1;switch(e.viewsActive.selectedFeedSection){case"feedsType":t=null!=e.selectedFeed,window.ctfSelectedFeed=e.selectedFeed;break;case"selectSource":case"selectTemplate":t=e.creationProcessCheckAppCredentials()}return t},backToPostElements:function(){var e=this,t=e.customizerSidebarBuilder.customize.sections.customize_videos.nested_sections.individual_elements;e.customizerScreens.activeSection="customize_videos",e.customizerScreens.activeSectionData=e.customizerSidebarBuilder.customize.sections.customize_videos,e.switchCustomizerSection("individual_elements",t,!0,!0),B.$forceUpdate()},backToLightboxExperience:function(){var e=this,t=e.customizerSidebarBuilder.customize.sections.customize_videos.nested_sections.customize_lightbox;e.customizerScreens.activeSection="customize_lightbox",e.customizerScreens.activeSectionData=e.customizerSidebarBuilder.customize.sections.customize_videos,e.switchCustomizerSection("customize_lightbox",t,!0,!0),B.$forceUpdate()},creationProcessNext:function(){var e=this;switch(e.viewsActive.selectedFeedSection){case"feedsType":if("channel"===e.selectedFeed)return(e.connectedAccountStatus||e.apiKeyStatus)&&e.switchScreen("selectedFeedSection","selectSource"),void(e.connectedAccountStatus||e.apiKeyStatus||e.activateView("accountAPIPopup"));if("channel"!==e.selectedFeed&&!e.apiKeyStatus)return e.activateView("accountAPIPopup"),void(e.shouldShowFeedAPIForm=!0);null!==e.selectedFeed&&e.switchScreen("selectedFeedSection","selectSource");break;case"selectSource":e.selectedFeedModel[e.selectedFeed]&&(e.sbyLicenseNoticeActive||!e.hasFeature("feeds_templates")?e.isCreateProcessGood=!0:e.verifySource()?e.switchScreen("selectedFeedSection","selectTemplate"):jQuery(".sbc-select-source-content ul").removeClass("highlight-rules").addClass("highlight-rules"));break;case"selectTemplate":e.isCreateProcessGood=!0}e.isCreateProcessGood&&e.submitNewFeed()},verifySource:function(){var e=this,t=(e.selectedFeed,e.selectedFeedModel[e.selectedFeed]),i=!0;return/youtube\.com\/(channel|user|playlist|watch)/.test(t)&&(i=!1),i},copyToClipBoard:function(e){var t=this,i=document.createElement("textarea");i.className="ctf-fb-cp-clpboard",i.value=e,document.body.appendChild(i),i.select(),document.execCommand("copy"),document.body.removeChild(i),t.notificationElement={type:"success",text:this.genericText.copiedClipboard,shown:"shown"},setTimeout((function(){t.notificationElement.shown="hidden"}),3e3),B.$forceUpdate()},feedActionDuplicate:function(e){var t=this,i={action:"sby_feed_saver_manager_duplicate_feed",feed_id:e.id};t.ajaxPost(i,(function(e){var i=e.data;t.feedsList=Object.values(Object.assign({},i))})),B.$forceUpdate()},selectFeedCheckBox:function(e){this.feedsSelected.includes(e)?this.feedsSelected.splice(this.feedsSelected.indexOf(e),1):this.feedsSelected.push(e),B.$forceUpdate()},selectAllFeedCheckBox:function(){var e=this;e.checkAllFeedsActive()?e.feedsSelected=[]:(e.feedsSelected=[],e.feedsList.forEach((function(t){e.feedsSelected.push(t.id)})))},checkAllFeedsActive:function(){var e=this,t=!0;return e.feedsList.forEach((function(i){e.feedsSelected.includes(i.id)||(t=!1)})),t},bulkActionClick:function(){var e=this;"delete"===e.selectedBulkAction&&e.feedsSelected.length>0&&e.openDialogBox("deleteMultipleFeeds"),B.$forceUpdate()},switchCustomizerPreviewDevice:function(e){var t=this;t.customizerScreens.previewScreen=e,t.loadingBar=!0,setTimeout((function(){t.setShortcodeGlobalSettings(!0),t.loadingBar=!1}),200),B.$forceUpdate()},resetColor:function(e){this.customizerFeedData.settings[e]=""},toggleElementTooltip:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"center",n=this,o=window.event.currentTarget,s=null!=o&&null!=o?document.querySelector(".sb-control-elem-tltp-content"):null;if(null!=s&&"show"==t){n.tooltip.text=e;var c=o.getBoundingClientRect(),r=c.left+10,a=c.top-10;s.style.left=r+"px",s.style.top=a+"px",s.style.textAlign=i,n.tooltip.hover=!0}"hide"==t&&setTimeout((function(){"inside"!=n.tooltip.hoverType&&(n.tooltip.hover=!1)}),200)},hoverTooltip:function(e,t){this.tooltip.hover=e,this.tooltip.hoverType=t},reCheckLicenseKey:function(){var e=this,t=document.querySelector(".sb-license-notice");this.recheckLicenseStatus="loading";var i=new FormData;i.append("action","sby_recheck_connection"),i.append("license_key",this.licenseKey),i.append("nonce",this.nonce),fetch(this.ajaxHandler,{method:"POST",credentials:"same-origin",body:i}).then((function(e){return e.json()})).then((function(i){1==i.success&&("valid"==i.data.license&&(e.recheckLicenseStatus="success"),"valid"!=i.data.license&&(e.recheckLicenseStatus="error"),setTimeout(function(){this.recheckLicenseStatus=null,"valid"==i.data.license&&t.remove()}.bind(e),3e3))}))},recheckBtnText:function(e){var t=this;return null==t.recheckLicenseStatus?t.genericText.recheckLicenseKey:"loading"==t.recheckLicenseStatus?t.svgIcons.loader:"success"==t.recheckLicenseStatus?t.svgIcons.checkmarkCircleSVG+" "+t.genericText.licenseValid:"error"==t.recheckLicenseStatus?t.svgIcons.timesSVG+t.genericText.licenseExpired:void 0},creationProcessBack:function(){var e=this;switch(e.viewsActive.selectedFeedSection){case"feedsType":e.switchScreen("pageScreen","welcome");break;case"selectSource":e.switchScreen("selectedFeedSection","feedsType");break;case"selectTemplate":case"feedsTypeGetProcess":e.switchScreen("selectedFeedSection","selectSource")}B.$forceUpdate()},feedListPagination:function(e){var t=this,i=t.feedPagination.currentPage,n=t.feedPagination.pagesNumber;if(t.loadingBar=!0,1!=i&&"prev"==e||i<n&&"next"==e){t.feedPagination.currentPage="next"==e?i<n?parseInt(i)+1:n:i>1?parseInt(i)-1:1;var o={action:"sby_feed_saver_manager_get_feed_list_page",page:t.feedPagination.currentPage};t.ajaxPost(o,(function(e){var i=e.data;i&&(t.feedsList=i),t.loadingBar=!1})),B.$forceUpdate()}},chooseFeedType:function(e){var t=this;t.selectedFeed=e.type;var i=t.hasFeature(t.selectedFeed+"_feeds");if("social_wall"===t.selectedFeed){if(t.socialWallActivated)return void(window.location.href=t.socialWallAdminPage);t.selectedFeed=null,t.viewsActive.extensionsPopupElement="social_wall"}else i||(t.viewsActive.extensionsPopupElement=t.selectedFeed,t.selectedFeed=null);B.$forceUpdate()},activateProExtPopup:function(e){this.viewsActive.extensionsPopupElement=e.type},activateAPIForm:function(){this.viewsActive.accountAPIPopup=!0,this.shouldShowFeedAPIForm=!0},onboardingClose:function(){var e=this,t=e.viewsActive.onboardingPopup?"newuser":"customizer";document.getElementById("sbc-builder-app").classList.remove("sb-onboarding-active"),e.viewsActive.onboardingPopup=!1,e.viewsActive.onboardingCustomizerPopup=!1,e.viewsActive.onboardingStep=0;var i={action:"sby_dismiss_onboarding",was_active:t};e.ajaxPost(i,(function(e){e.data})),B.$forceUpdate()},onboardingNext:function(){this.viewsActive.onboardingStep++,this.onboardingHideShow(),B.$forceUpdate()},onboardingPrev:function(){this.viewsActive.onboardingStep--,this.onboardingHideShow(),B.$forceUpdate()},onboardingHideShow:function(){for(var e=document.querySelectorAll(".sb-onboarding-tooltip"),t=0;t<e.length;t++)e[t].style.display="none";document.querySelectorAll(".sb-onboarding-tooltip-"+this.viewsActive.onboardingStep)[0].style.display="block",this.viewsActive.onboardingCustomizerPopup&&(2===this.viewsActive.onboardingStep?this.switchCustomizerTab("customize"):3===this.viewsActive.onboardingStep&&this.switchCustomizerTab("settings"))},positionOnboarding:function(){var e=this,t=document.querySelectorAll(".sb-onboarding-overlay")[0],i=document.getElementById("sbc-builder-app");null!=t&&(e.viewsActive.onboardingCustomizerPopup&&e.iscustomizerScreen&&e.customizerFeedData?null!==document.getElementById("sb-onboarding-tooltip-customizer-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".sbc-yt-header")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-1")),document.querySelectorAll(".sb-customizer-sidebar-sec1")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-2")),document.querySelectorAll(".sb-customizer-sidebar-sec1")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-3")),e.onboardingHideShow()):e.viewsActive.onboardingPopup&&!e.iscustomizerScreen&&("single"===sbc_builder.allFeedsScreen.onboarding.type?null!==document.getElementById("sb-onboarding-tooltip-single-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".ctf-fb-wlcm-header .sb-positioning-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-single-1")),document.querySelectorAll(".ctf-table-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-single-2")),e.onboardingHideShow()):null!==document.getElementById("sb-onboarding-tooltip-multiple-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".ctf-fb-wlcm-header .sb-positioning-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-1")),document.querySelectorAll(".ctf-fb-lgc-ctn")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-2")),document.querySelectorAll(".ctf-legacy-table-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-3")),e.activateView("legacyFeedsShown"),e.onboardingHideShow())))},customizerControlAjaxAction:function(e){var t=this;switch(e){case"feedFlyPreview":t.loadingBar=!0,t.templateRender=!1;var i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name};t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),t.setShortcodeGlobalSettings(!0),t.processNotification("previewUpdated")):t.processNotification("unkownError")}));break;case"feedTypeFlyPreview":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,isFeedTypesPopup:!0},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),document.querySelector("body").classList.toggle("overflow-hidden"),t.processNotification("previewUpdated"),t.loadingBar=!1,setTimeout((function(){t.setShortcodeGlobalSettings(!0)}),500)):t.processNotification("unkownError")}));break;case"feedTemplateFlyPreview":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,isFeedTemplatesPopup:!0},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),t.processNotification("previewUpdated"),document.querySelector("body").classList.toggle("overflow-hidden"),t.loadingBar=!1,setTimeout((function(){t.setShortcodeGlobalSettings(!0)}),500)):t.processNotification("unkownError")}));break;case"feedRefresh":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_refresh",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),setTimeout((function(){t.setShortcodeGlobalSettings(!0),t.loadingBar=!1}),200),t.processNotification("previewUpdated"),t.loadingBar=!1):t.processNotification("unkownError")}));break;case"filtersAndModeration":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,clearCache:!0},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),t.setShortcodeGlobalSettings(!0),t.processNotification("previewUpdated")):t.processNotification("unkownError")}));break;case"feedPreviewRender":setTimeout((function(){}),150);break;case"feedHandleFlyPreview":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_handle_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,feedType:t.customizerFeedData.settings.type},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),t.setShortcodeGlobalSettings(!0),t.customizerFeedData.settings=i.customizerDataSettings,t.processNotification("previewUpdated")):t.processNotification("unkownError")}))}},resetColorOverride:function(e){this.customizerFeedData.settings[e]=""},viewFeedInstances:function(e){this.viewsActive.instanceFeedActive=e,this.movePopUp(),B.$forceUpdate()},processDomList:function(e,t){document.querySelectorAll(e).forEach((function(e){t.map((function(t){e.setAttribute(t[0],t[1])}))}))},openTooltipBig:function(){var e=window.event.currentTarget;this.processDomList(".sbc-fb-onbrd-tltp-elem",[["data-active","false"]]),e.querySelector(".sbc-fb-onbrd-tltp-elem").setAttribute("data-active","true"),B.$forceUpdate()},closeTooltipBig:function(){this.processDomList(".sbc-fb-onbrd-tltp-elem",[["data-active","false"]]),window.event.stopPropagation(),B.$forceUpdate()},movePopUp:function(){var e=document.querySelectorAll("sb-fs-boss");e.length>0&&document.getElementById("wpbody-content").prepend(e[0])},checkObjectArrayElement:function(e,t,i){return e.filter((function(e){return e[i]==t[i]})).length>0},getModerationShoppableMode:function(){return this.viewsActive.moderationMode||"settings_shoppable_feed"==this.customizerScreens.activeSection?this.moderationShoppableMode=!0:this.moderationShoppableMode=!1,this.moderationShoppableMode},getModerationShoppableModeOffset:function(){return this.moderationShoppableModeOffset>0},formatSubscriberCount:function(e){console.log(e)},hasFeature:function(e){return this.license_tier_features.includes(e)}}),n=C(C({},e.extraData),{},(E(E(E(E(E(E(E(E(E(E(t={$parent:void 0,nonce:sbc_builder.nonce,template:sbc_builder.feedInitOutput,freeCtaShowFeatures:!1,upgradeUrl:sbc_builder.upgradeUrl,supportPageUrl:sbc_builder.supportPageUrl,pluginURL:sbc_builder.pluginURL,builderUrl:sbc_builder.builderUrl,pluginType:sbc_builder.pluginType,genericText:sbc_builder.genericText,sourcesScreenText:sbc_builder.sourcesScreenText,apiKeyPopupScreen:sbc_builder.apiKeyPopupScreen,selectTemplate:sbc_builder.selectTemplate,ajaxHandler:sbc_builder.ajaxHandler,adminPostURL:sbc_builder.adminPostURL,welcomeScreen:sbc_builder.welcomeScreen,svgIcons:sbc_builder.svgIcons,license_tier_features:sbc_builder.license_tier_features,customizerFeedDataInitial:null,customizerFeedData:sbc_builder.customizerFeedData,customizerHeaderData:sbc_builder.headerData,iscustomizerScreen:null!=sbc_builder.customizerFeedData&&0!=sbc_builder.customizerFeedData,selectFeedTypeScreen:sbc_builder.selectFeedTypeScreen,customizerSidebarBuilder:sbc_builder.customizerSidebarBuilder,feedTypes:sbc_builder.feedTypes,advancedFeedTypes:sbc_builder.advancedFeedTypes,extensionsPopup:sbc_builder.extensionsPopup,apiKeyStatus:sbc_builder.apiKeyStatus,connectedAccountStatus:sbc_builder.connectedAccountStatus,sbyAPIKey:null,apiKeyBtnLoader:!1,apiKeyError:!1,accessTokenError:!1,feedStyle:"",isCreateProcessGood:!1,socialWallActivated:sbc_builder.pluginsInfo.social_wall.activated,licenseKey:sbc_builder.licenseKey,sbyIsPro:"1"===sbc_builder.sbyIsPro,sbyLicenseNoticeActive:"1"===sbc_builder.sbyLicenseNoticeActive,sbyLicenseInactiveState:"1"===sbc_builder.sbyLicenseInactiveState,socialWallAdminPage:sbc_builder.pluginsInfo.social_wall.settingsPage,recheckLicenseStatus:null,customizerScreens:{activeTab:"customize",printedType:{},printedTemplate:{},activeSection:null,previewScreen:"desktop",sourceExpanded:null,sourcesChoosed:[],inputNameWidth:"0px",activeSectionData:null,parentActiveSection:null,parentActiveSectionData:null,activeColorPicker:null},previewScreens:["desktop","tablet","mobile"],nestedStylingSection:["playicon_styling_title","video_styling_title","user_styling_title","views_styling_title","countdown_styling_title","stats_styling_title","date_styling_title","description_styling_title"],embedPopupScreen:sbc_builder.embedPopupScreen,customizeScreensText:sbc_builder.customizeScreens,highLightedSection:"all",dummyLightBoxScreen:!1,dialogBoxPopupScreen:sbc_builder.dialogBoxPopupScreen,selectFeedTemplateScreen:sbc_builder.selectFeedTemplateScreen,shouldShowFeedAPIBackBtn:!1,dialogBox:{active:!1,type:null,heading:null,description:null,customButtons:void 0},sourceToDelete:{},viewsActive:{footerDiabledScreens:["welcome","selectFeed"],footerWidget:!1,pageScreen:"welcome",selectedFeedSection:"feedsType",manualSourcePopupInit:sbc_builder.manualSourcePopupInit,sourcePopup:!1,feedtypesPopup:!1,feedtemplatesPopup:!1,feedTemplateElement:null,feedtypesCustomizerPopup:!1,sourcesListPopup:!1,sourcePopupScreen:"redirect_1",extensionsPopupElement:!1,sourcePopupType:"creation",accountAPIPopup:!1,instanceFeedActive:null,clipboardCopiedNotif:!1,legacyFeedsShown:!1,editName:!1,embedPopup:!1,embedPopupScreen:"step_1",embedPopupSelectedPage:null,onboardingPopup:sbc_builder.allFeedsScreen.onboarding.active,onboardingStep:1,licenseLearnMore:!1,whyRenewLicense:!1,onboardingCustomizerPopup:sbc_builder.customizeScreens.onboarding.active,installPluginPopup:!1,installPluginModal:"facebook"},wordpressPageLists:sbc_builder.wordpressPageLists,widgetsPageURL:sbc_builder.widgetsPageURL,feedTemplates:sbc_builder.feedTemplates,selectedBulkAction:!1,selectedFeed:"channel",selectedFeedPopup:[],selectedFeedTemplate:"default",feedsSelected:[]},"extensionsPopup",sbc_builder.extensionsPopup),"tooltip",{text:"",hover:!1,hoverType:"outside"}),"activeExtensionsFull",sbc_builder.activeExtensions),"activeExtensions",[]),"inActiveExtensions",[]),"fullScreenLoader",!1),"appLoaded",!1),"previewLoaded",!1),"loadingBar",!0),"licenseBtnClicked",!1),E(E(E(E(t,"notificationElement",{type:"success",text:"",shown:null}),"feedPagination",{feedsCount:null!=sbc_builder.feedsCount?sbc_builder.feedsCount:null,pagesNumber:1,currentPage:1,itemsPerPage:null!=sbc_builder.itemsPerPage?sbc_builder.itemsPerPage:null}),"sw_feed",!1),"sw_feed_id",!1)));Vue.component(I,{template:"#"+I,props:["customizerFeedData","parent","dummyLightBoxScreen","customizerHeaderData"]}),B=new Vue({el:"#sbc-builder-app",http:{emulateJSON:!0,emulateHTTP:!0},components:{"sketch-picker":L},mixins:[VueClickaway.mixin],data:n,updated:function(){this.iscustomizerScreen&&this.setShortcodeGlobalSettings(!0)},computed:{feedStyleOutput:function(){return this.customizerStyleMaker()}},created:function(){var e=this,t=this,i=new URLSearchParams(window.location.search);t.sw_feed=i.get("sw-feed"),t.sw_feed_id=i.get("sw-feed-id"),setTimeout((function(){var i=window.location.search,n=new URLSearchParams(i),o=n.get("page"),s=n.get("sby_access_token"),c=n.get("sby_refresh_token");t.loadingBar=!1,e.$parent=t,t.customizerFeedData&&(t.customizerFeedDataInitial=JSON.parse(JSON.stringify(t.customizerFeedData))),null==t.customizerFeedData&&(t.feedPagination.pagesNumber=null!=t.feedPagination.feedsCount?Math.ceil(t.feedPagination.feedsCount/t.feedPagination.itemsPerPage):1),"sby-feed-builder"==o&&s&&c&&(t.switchScreen("pageScreen","selectFeed"),t.switchScreen("selectedFeedSection","selectSource")),t.activeExtensionsFull.map((function(e){return t.activeExtensions[e.type]=e.active})),t.activeExtensionsFull.map((function(e){0==e.active&&e.ids.forEach((function(i){t.inActiveExtensions[i]=e.type}))})),t.positionOnboarding(),document.querySelector("#sbc-builder-app").classList.add("initialized")}),100)},methods:i})}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,